datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Books {
  id         Int          @id @default(autoincrement())
  title      String       @db.VarChar(45)
  author     String       @db.VarChar(45)
  genre      String?      @db.VarChar(45)
  stock      Int
  price      Int
  UserItems  UserItems[]
  Orders     Orders[]
  BookStocks BookStocks[]
}

model User {
  id        Int         @id @default(autoincrement())
  firstName String      @db.VarChar(15)
  lastName  String      @db.VarChar(15)
  userName  String      @db.VarChar(15)
  password  String      @db.VarChar(15)
  email     String      @db.VarChar(15)
  UserItems UserItems[]
  Orders    Orders[]
}

model UserItems {
  id     Int    @id @default(autoincrement())
  user   User?  @relation(fields: [idUser], references: [id])
  idUser Int
  book   Books? @relation(fields: [idBook], references: [id])
  idBook Int
}

model Orders {
  id        Int      @id @default(autoincrement())
  user      User?    @relation(fields: [idUser], references: [id])
  idUser    Int
  book      Books?   @relation(fields: [idBook], references: [id])
  idBook    Int
  orderDate DateTime
}

model Warehouses {
  id         Int          @id @default(autoincrement())
  address    String?      @db.VarChar(45)
  BookStocks BookStocks[]
}

model BookStocks {
  id          Int         @id @default(autoincrement())
  book        Books?      @relation(fields: [idBook], references: [id])
  idBook      Int
  warehouse   Warehouses? @relation(fields: [idWarehouse], references: [id])
  idWarehouse Int
  stock       Int?
}
